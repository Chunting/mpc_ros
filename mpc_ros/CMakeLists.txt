cmake_minimum_required(VERSION 3.5)
project(mpc_ros)

## Compile as C++11, supported in ROS Kinetic and newer
add_definitions(-std=c++11 -O3)

# options for build configuration
option(BUILD_EXAMPLE "Whether or not building the CppAD & Ipopt example" OFF) 

## Find catkin macros and libraries
## if COMPONENTS list like find_package(catkin REQUIRED COMPONENTS xyz)
## is used, also find other catkin packages
find_package(catkin REQUIRED COMPONENTS
  costmap_2d
  dynamic_reconfigure
  geometry_msgs
  nav_msgs
  ackermann_msgs
  message_generation
  move_base
  roscpp
  rospy
  std_msgs
  tf
  visualization_msgs
)


catkin_package(
   INCLUDE_DIRS include
#  LIBRARIES mpc_ros
#  CATKIN_DEPENDS costmap_2d dynamic_reconfigure geometry_msgs message_generation move_base roscpp rospy std_msgs tf visualization_msgs
#  DEPENDS system_lib
)

###########
## Build ##
###########

## Specify additional locations of header files
## Your package locations should be listed before other locations
include_directories( ${catkin_INCLUDE_DIRS} include )
include_directories(/usr/include)
link_directories(/usr/lib)


# General MPC_Node 
ADD_EXECUTABLE( MPC_Node src/MPC.cpp src/MPC_Node.cpp )
TARGET_LINK_LIBRARIES(MPC_Node ipopt ${catkin_LIBRARIES} )

# Total navigation with MPC_Node
ADD_EXECUTABLE( MPC_Node_last src/MPC_last.cpp src/MPC_lastNode.cpp )
TARGET_LINK_LIBRARIES(MPC_Node_last ipopt ${catkin_LIBRARIES} )

# Local planner with MPC_Node for tracking
ADD_EXECUTABLE( MPC_local_plan src/MPC_local.cpp src/MPC_local_planNode.cpp )
TARGET_LINK_LIBRARIES(MPC_local_plan ipopt ${catkin_LIBRARIES} )


# Pure Pursuit Node
ADD_EXECUTABLE( Pure_Pursuit_Node src/Pure_Pursuit.cpp)
TARGET_LINK_LIBRARIES(Pure_Pursuit_Node ${catkin_LIBRARIES})

# Local planner with Pure Pursuit for tracking
ADD_EXECUTABLE( Pure_Pursuit_localplan src/Pure_Pursuit_local_plan.cpp )
TARGET_LINK_LIBRARIES(Pure_Pursuit_localplan ${catkin_LIBRARIES})

# Own Global planner for tracking desired trajectory
add_library(global_planner_lib src/global_planner/global_planner.cpp)
target_link_libraries(global_planner_lib ipopt ${catkin_LIBRARIES} )

#############
## Example ##
#############
if(BUILD_EXAMPLE)
    ADD_EXECUTABLE( CppAD_started example/CppAD_started.cpp )
    TARGET_LINK_LIBRARIES(CppAD_started)
    
    ADD_EXECUTABLE( CppAD_Ipopt example/CppAD_Ipopt.cpp )
    TARGET_LINK_LIBRARIES(CppAD_Ipopt ipopt)
endif(BUILD_EXAMPLE)
